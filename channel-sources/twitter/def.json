{
  "name": "Twitter Streaming API Source",
  "description": "Use this source to pull tweets into Elasticsearch. You can stream specific user's tweets or search topics.",
  "groups": [
    {
      "key": "connectionInformation",
      "title": "Twitter Development Credentials",
      "description": "Provide the details below, which come from your Twitter development account. Go to https://apps.twitter.com to manage yours."
    },
    {
      "key": "searchInformation",
      "title": "Twitter Search Information",
      "description": "Provide a comma delimited list of users or topics to follow. You must provide at least one user or topic. "
    },
    {
      "key": "elasticIndexInfo",
      "title": "Elasticsearch Index Information",
      "description": "Fow now this is just specifying the ES index. Soon we'll specify the indexing method as well."
    }
  ],
  "parameters": [
    {
      "type": "text",
      "group": "connectionInformation",
      "name": "consumerKey",
      "label": "Consumer Key",
      "description": "The Consumer Key from the Twitter dev portal.",
      "required": true
    },
    {
      "type": "text",
      "group": "connectionInformation",
      "name": "consumerSecret",
      "label": "Consumer Secret",
      "description": "The Consumer Secret from the Twitter dev portal.",
      "required": true
    },
    {
      "type": "text",
      "group": "connectionInformation",
      "name": "accessToken",
      "label": "Access Token",
      "description": "The Access Token from the Twitter dev portal.",
      "required": true
    },
    {
      "type": "text",
      "group": "connectionInformation",
      "name": "accessSecret",
      "label": "Access Secret",
      "description": "The Access Secret from the Twitter dev portal.",
      "required": true
    },
    {
      "type": "text",
      "group": "elasticIndexInfo",
      "name": "index",
      "label": "Elasticsearch Index",
      "placeholder": "Index Name",
      "description": "This will be the name of the index inside of Elasticsearch.",
      "required": true
    },
    {
      "type": "text",
      "group": "searchInformation",
      "name": "users",
      "label": "Users to Follow",
      "placeholder": "users",
      "description": "Follow multiple users by providing a comma seperated list.",
      "required": false
    },
    {
      "type": "text",
      "group": "searchInformation",
      "name": "topics",
      "label": "Topics to Follow",
      "placeholder": "topics",
      "description": "Follow multiple topics by providing a comma seperated list.",
      "required": false
    }
  ],
  "flow": "{\r\n\t\"label\": \"{{_name}}\",\r\n\t\"nodes\": [{\r\n\t\t\"id\": \"{{_id}}-1\",\r\n\t\t\"type\": \"flat\",\r\n\t\t\"name\": \"\",\r\n\t\t\"safe\": \"!1\",\r\n\t\t\"x\": 250,\r\n\t\t\"y\": 40,\r\n\t\t\"wires\": [\r\n\t\t\t[\"{{_id}}-2\"]\r\n\t\t]\r\n\t}, {\r\n\t\t\"id\": \"{{_id}}-2\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"name\": \"\",\r\n\t\t\"func\": \"var index = \\\"{{index}}\\\"\\n\\nvar createdAt = msg.payload['created_at']\\nmsg.payload['created_at'] = new Date(Date.parse(createdAt.replace(\/( \\\\+)\/, ' UTC$1')));\\n\\nvar operation = {\\n    \\\"_index\\\": index,\\n    \\\"_type\\\": \\\"default\\\"\\n    }\\n\\nvar msg1 = {\\n    payload: JSON.stringify({\\\"index\\\": operation})\\n}\\n\\nvar msg2 = {\\n    payload: JSON.stringify(msg.payload)\\n}\\n\\nreturn [[msg1,msg2]];\",\r\n\t\t\"outputs\": \"1\",\r\n\t\t\"noerr\": 0,\r\n\t\t\"x\": 390,\r\n\t\t\"y\": 40,\r\n\t\t\"wires\": [\r\n\t\t\t[\"{{_id}}-3\"]\r\n\t\t]\r\n\t}, {\r\n\t\t\"id\": \"{{_id}}-3\",\r\n\t\t\"type\": \"join\",\r\n\t\t\"name\": \"\",\r\n\t\t\"mode\": \"custom\",\r\n\t\t\"build\": \"string\",\r\n\t\t\"property\": \"payload\",\r\n\t\t\"propertyType\": \"msg\",\r\n\t\t\"key\": \"topic\",\r\n\t\t\"joiner\": \"\\\\n\",\r\n\t\t\"joinerType\": \"str\",\r\n\t\t\"accumulate\": \"!1\",\r\n\t\t\"timeout\": \"\",\r\n\t\t\"count\": \"1000\",\r\n\t\t\"x\": 530,\r\n\t\t\"y\": 40,\r\n\t\t\"wires\": [\r\n\t\t\t[\"{{_id}}-4\"]\r\n\t\t]\r\n\t}, {\r\n\t\t\"id\": \"{{_id}}-4\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"name\": \"Add Trailing New Line\",\r\n\t\t\"func\": \"msg.payload += \\\"\\\\n\\\"\\nreturn msg;\",\r\n\t\t\"outputs\": 1,\r\n\t\t\"noerr\": 0,\r\n\t\t\"x\": 720,\r\n\t\t\"y\": 40,\r\n\t\t\"wires\": [\r\n\t\t\t[\"{{_id}}-5\"]\r\n\t\t]\r\n\t}, {\r\n\t\t\"id\": \"{{_id}}-5\",\r\n\t\t\"type\": \"http request\",\r\n\t\t\"name\": \"\",\r\n\t\t\"method\": \"POST\",\r\n\t\t\"ret\": \"obj\",\r\n\t\t\"url\": \"elasticsearch:9200\/_bulk\",\r\n\t\t\"tls\": \"\",\r\n\t\t\"x\": 930,\r\n\t\t\"y\": 40,\r\n\t\t\"wires\": [\r\n\t\t\t[]\r\n\t\t]\r\n\t}, {\r\n\t\t\"id\": \"{{_id}}-6\",\r\n\t\t\"type\": \"trigger\",\r\n\t\t\"op1\": \"\",\r\n\t\t\"op2\": \"true\",\r\n\t\t\"op1type\": \"nul\",\r\n\t\t\"op2type\": \"bool\",\r\n\t\t\"duration\": \"2\",\r\n\t\t\"extend\": \"!0\",\r\n\t\t\"units\": \"s\",\r\n\t\t\"reset\": \"\",\r\n\t\t\"name\": \"\",\r\n\t\t\"x\": 240,\r\n\t\t\"y\": 100,\r\n\t\t\"wires\": [\r\n\t\t\t[\"{{_id}}-7\"]\r\n\t\t]\r\n\t}, {\r\n\t\t\"id\": \"{{_id}}-7\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"name\": \"\",\r\n\t\t\"func\": \"delete msg.payload\\nmsg.complete = true\\n\\nreturn msg;\",\r\n\t\t\"outputs\": 1,\r\n\t\t\"noerr\": 0,\r\n\t\t\"x\": 410,\r\n\t\t\"y\": 100,\r\n\t\t\"wires\": [\r\n\t\t\t[\"{{_id}}-3\"]\r\n\t\t]\r\n\t}, {\r\n\t\t\"id\": \"{{_id}}-8\",\r\n\t\t\"type\": \"Twitter Stream\",\r\n\t\t\"connection\": \"{{_id}}-9\",\r\n\t\t\"follow\": \"{{users}}\",\r\n\t\t\"topics\": \"{{topics}}\",\r\n\t\t\"tweetLimit\": \"0\",\r\n\t\t\"onlyVerified\": \"!1\",\r\n\t\t\"topicRetweets\": \"!1\",\r\n\t\t\"loadImages\": \"!1\",\r\n\t\t\"topicLanguage\": \"en\",\r\n\t\t\"debug\": \"!1\",\r\n\t\t\"name\": \"\",\r\n\t\t\"x\": 90,\r\n\t\t\"y\": 40,\r\n\t\t\"wires\": [\r\n\t\t\t[\"{{_id}}-1\", \"{{_id}}-6\"]\r\n\t\t]\r\n\t}, {\r\n\t\t\"id\": \"{{_id}}-9\",\r\n\t\t\"type\": \"twitter-api-connection\",\r\n\t\t\"consumerKey\": \"{{consumerKey}}\",\r\n\t\t\"consumerSecret\": \"{{consumerSecret}}\",\r\n\t\t\"accessToken\": \"{{accessToken}}\",\r\n\t\t\"accessSecret\": \"{{accessSecret}}\"\r\n\t}]\r\n}"}
